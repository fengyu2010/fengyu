-- 适配手机端的绘制 + 按钮开关脚本（支持 Drawing API）

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local ESP_ENABLED = false
local lines = {}

-- 创建按钮（手机屏幕适配）
local button = Drawing.new("Square")
button.Size = Vector2.new(120, 40)
button.Position = Vector2.new(Camera.ViewportSize.X - 130, Camera.ViewportSize.Y - 50)
button.Color = Color3.fromRGB(40, 40, 40)
button.Filled = true
button.Visible = true

local buttonText = Drawing.new("Text")
buttonText.Text = "ESP: OFF"
buttonText.Position = button.Position + Vector2.new(10, 10)
buttonText.Size = 20
buttonText.Color = Color3.fromRGB(255, 255, 255)
buttonText.Center = false
buttonText.Outline = true
buttonText.Visible = true

-- 判断是否触摸到按钮范围
local function isTouchInside(touchPos)
    return touchPos.X >= button.Position.X and touchPos.X <= button.Position.X + button.Size.X
       and touchPos.Y >= button.Position.Y and touchPos.Y <= button.Position.Y + button.Size.Y
end

-- 手机端触控监听切换开关
UserInputService.TouchTap:Connect(function(touches)
    local touchPos = touches[1]
    if isTouchInside(touchPos) then
        ESP_ENABLED = not ESP_ENABLED
        buttonText.Text = ESP_ENABLED and "ESP: ON" or "ESP: OFF"
    end
end)

-- 创建一条线
local function createLine(from, to)
    local line = Drawing.new("Line")
    line.From = from
    line.To = to
    line.Color = Color3.fromRGB(0, 255, 0)
    line.Thickness = 2
    line.Transparency = 1
    line.Visible = true
    table.insert(lines, line)
end

-- 清除所有线
local function clearLines()
    for _, line in ipairs(lines) do
        line:Remove()
    end
    table.clear(lines)
end

-- 主绘制逻辑
RunService.RenderStepped:Connect(function()
    clearLines()
    if not ESP_ENABLED then return end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local pos, onScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                local from = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                local to = Vector2.new(pos.X, pos.Y)
                createLine(from, to)
            end
        end
    end
end)